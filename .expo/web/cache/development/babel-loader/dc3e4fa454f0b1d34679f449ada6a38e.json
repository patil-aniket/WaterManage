{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Svg, { G, Path } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedSvg = Animated.createAnimatedComponent(Svg);\n\nvar Wave = function (_React$PureComponent) {\n  _inherits(Wave, _React$PureComponent);\n\n  var _super = _createSuper(Wave);\n\n  function Wave(props) {\n    var _this;\n\n    _classCallCheck(this, Wave);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        H = _this$props.H,\n        waveParams = _this$props.waveParams,\n        animated = _this$props.animated;\n    _this.state = {\n      H: H,\n      waveParams: waveParams\n    };\n    _this._animValues = [];\n    _this._animations = [];\n    _this._animated = animated || false;\n\n    for (var i = 0; i < _this.state.waveParams.length; i++) {\n      _this._animValues.push(new Animated.Value(0));\n    }\n\n    return _this;\n  }\n\n  _createClass(Wave, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animated && this.startAnim();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopAnim();\n      this._animValues = null;\n      this._animations = null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      var _this$state = this.state,\n          H = _this$state.H,\n          waveParams = _this$state.waveParams;\n      var waves = [];\n\n      for (var i = 0; i < waveParams.length; i++) {\n        var _waveParams$i = waveParams[i],\n            A = _waveParams$i.A,\n            T = _waveParams$i.T,\n            fill = _waveParams$i.fill;\n\n        var translateX = this._animValues[i].interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -2 * T]\n        });\n\n        var wave = _jsx(AnimatedSvg, {\n          style: {\n            width: 3 * T,\n            height: A + H,\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            transform: [{\n              translateX: translateX\n            }]\n          },\n          preserveAspectRatio: \"xMinYMin meet\",\n          viewBox: \"0 0 \" + 3 * T + \" \" + (A + H),\n          children: _jsx(Path, {\n            d: \"M 0 0 Q \" + T / 4 + \" \" + -A + \" \" + T / 2 + \" 0 T \" + T + \" 0 T \" + 3 * T / 2 + \" 0 T \" + 2 * T + \" 0 T \" + 5 * T / 2 + \" 0 T \" + 3 * T + \" 0 V \" + H + \" H 0 Z\",\n            fill: fill,\n            transform: \"translate(0, \" + A + \")\"\n          })\n        }, i);\n\n        waves.push(wave);\n      }\n\n      return _jsx(View, {\n        style: style,\n        children: waves\n      });\n    }\n  }, {\n    key: \"setWaveParams\",\n    value: function setWaveParams(waveParams) {\n      var _this2 = this;\n\n      if (!waveParams) return;\n      var animated = this._animated;\n      var newWaveCount = waveParams.length;\n      var oldWaveCount = this.state.waveParams.length;\n\n      if (animated) {\n        this.stopAnim();\n\n        for (var _iterator = _createForOfIteratorHelperLoose(this._animValues), _step; !(_step = _iterator()).done;) {\n          var v = _step.value;\n          v.setValue(0);\n        }\n      }\n\n      if (newWaveCount !== oldWaveCount) {\n        this._animValues = [];\n\n        for (var i = 0; i < waveParams.length; i++) {\n          this._animValues.push(new Animated.Value(0));\n        }\n      }\n\n      this.setState({\n        waveParams: waveParams\n      }, function () {\n        if (animated) {\n          _this2.startAnim();\n        }\n      });\n    }\n  }, {\n    key: \"setWaterHeight\",\n    value: function setWaterHeight(H) {\n      this.setState({\n        H: H\n      });\n    }\n  }, {\n    key: \"startAnim\",\n    value: function startAnim() {\n      this.stopAnim();\n      var _this$props2 = this.props,\n          _this$props2$speed = _this$props2.speed,\n          speed = _this$props2$speed === void 0 ? 5000 : _this$props2$speed,\n          _this$props2$speedInc = _this$props2.speedIncreasePerWave,\n          speedIncreasePerWave = _this$props2$speedInc === void 0 ? 1000 : _this$props2$speedInc,\n          _this$props2$easing = _this$props2.easing,\n          easing = _this$props2$easing === void 0 ? 'linear' : _this$props2$easing;\n\n      for (var i = 0; i < this._animValues.length; i++) {\n        var anim = Animated.loop(Animated.timing(this._animValues[i], {\n          toValue: 1,\n          duration: speed + i * speedIncreasePerWave,\n          easing: Easing[easing],\n          useNativeDriver: true\n        }));\n\n        this._animations.push(anim);\n\n        anim.start();\n      }\n\n      this._animated = true;\n    }\n  }, {\n    key: \"stopAnim\",\n    value: function stopAnim() {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this._animations), _step2; !(_step2 = _iterator2()).done;) {\n        var _anim = _step2.value;\n\n        _anim.stop();\n\n        _anim = null;\n      }\n\n      this._animations = [];\n      this._animated = false;\n    }\n  }]);\n\n  return Wave;\n}(React.PureComponent);\n\n;\nexport default Wave;","map":{"version":3,"sources":["D:/EXPERIMENTS/IOE/Project/watrmanage/node_modules/react-native-waveview/index.js"],"names":["React","Svg","G","Path","AnimatedSvg","Animated","createAnimatedComponent","Wave","props","H","waveParams","animated","state","_animValues","_animations","_animated","i","length","push","Value","startAnim","stopAnim","style","waves","A","T","fill","translateX","interpolate","inputRange","outputRange","wave","width","height","position","left","bottom","transform","newWaveCount","oldWaveCount","v","setValue","setState","speed","speedIncreasePerWave","easing","anim","loop","timing","toValue","duration","Easing","useNativeDriver","start","_anim","stop","PureComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport {\n    View,\n    Animated,\n    StyleSheet,\n    Easing,\n} from 'react-native';\nimport Svg, {\n    G,\n    Path,\n} from 'react-native-svg';\n\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\n\n/**\n * ---------+------------------------+\n * <-- P -->|<--    T    -->|        |______\n *          |   /\\          |   /\\   |  ^\n *          |  /  \\         |  /  \\  |  A\n *          | /    \\        | /    \\ |  |\n *          |/      \\       |/      \\|__V___\n *          |        \\      /        |  ^\n *          |         \\    /         |  |\n *          |          \\  /          |  |\n *          |           \\/           |  H\n *          |                        |  |\n *          |                        |  |\n * ---------+------------------------+__V___\n */\n\n/**\n * @class Wave\n *\n * @prop {Number} H water level\n * @prop {Array} waveParams list of params: {A, T, fill}\n * @prop {bool} animated\n */\nclass Wave extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        let {H, waveParams, animated} = this.props;\n\n        this.state = {\n            H,\n            waveParams,\n        };\n\n        this._animValues = [];\n        this._animations = [];\n        this._animated = animated || false;\n\n        for (let i = 0; i < this.state.waveParams.length; i++) {\n            this._animValues.push(new Animated.Value(0));\n        }\n    }\n\n    componentDidMount() {\n        this._animated && this.startAnim();\n    }\n\n    componentWillUnmount() {\n        this.stopAnim();\n        this._animValues = null;\n        this._animations = null;\n    }\n\n    render() {\n        let {style} = this.props;\n        let {H, waveParams} = this.state;\n\n        let waves = [];\n\n        for (let i = 0; i < waveParams.length; i++) {\n            let {A, T, fill} = waveParams[i];\n            let translateX = this._animValues[i].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, -2 * T],\n            });\n            let wave = (\n                <AnimatedSvg\n                    key={i}\n                    style={{\n                        width: 3 * T,\n                        height: A + H,\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0,\n                        transform: [{ translateX }],\n                    }}\n                    preserveAspectRatio=\"xMinYMin meet\"\n                    viewBox={`0 0 ${3 * T} ${A + H}`}\n                >\n                    <Path\n                        d={`M 0 0 Q ${T / 4} ${-A} ${T / 2} 0 T ${T} 0 T ${3 * T / 2} 0 T ${2 * T} 0 T ${5 * T / 2} 0 T ${3 * T} 0 V ${H} H 0 Z`}\n                        fill={fill}\n                        transform={`translate(0, ${A})`}\n                    />\n                </AnimatedSvg>\n            );\n            waves.push(wave);\n        }\n\n        return (\n            <View style={style} >\n                {waves}\n            </View>\n        );\n    }\n\n    setWaveParams(waveParams) {\n        if (!waveParams) return;\n\n        let animated = this._animated;\n        let newWaveCount = waveParams.length;\n        let oldWaveCount = this.state.waveParams.length;\n        if (animated) {\n            this.stopAnim();\n            for (let v of this._animValues) {\n                v.setValue(0);\n            }\n        }\n        if (newWaveCount !== oldWaveCount) {\n            this._animValues = [];\n            for (let i = 0; i < waveParams.length; i++) {\n                this._animValues.push(new Animated.Value(0));\n            }\n        }\n\n        this.setState({\n            waveParams,\n        }, ()=>{\n            if (animated) {\n                this.startAnim();\n            }\n        });\n    }\n\n    setWaterHeight(H) {\n        this.setState({H});\n    }\n\n    startAnim() {\n        this.stopAnim();\n\n        const {\n          speed = 5000,\n          speedIncreasePerWave = 1000,\n          easing = 'linear'\n        } = this.props\n\n        for (let i = 0; i < this._animValues.length; i++) {\n            let anim = Animated.loop(Animated.timing(this._animValues[i], {\n                toValue: 1,\n                duration: speed + i * speedIncreasePerWave,\n                easing: Easing[easing],\n                useNativeDriver: true,\n            }));\n            this._animations.push(anim);\n            anim.start();\n        }\n        this._animated = true;\n    }\n\n    stopAnim() {\n        for (let _anim of this._animations) {\n            _anim.stop();\n            _anim = null;\n        }\n        this._animations = [];\n        this._animated = false;\n    }\n};\n\nexport default Wave;\n"]},"metadata":{},"sourceType":"module"}