{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport React, { useState } from 'react';\nimport firebase from \"./src/components/config\";\nimport MotorStatus from \"./src/components/motor-status/motor-status.component\";\nimport WaterLevel from \"./src/components/level-bar/level-bar.component\";\nimport 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var doSomething = function doSomething(value) {\n    firebase.database().ref('WatrManage/').update({\n      man: value ? 1 : 0\n    }).then(function (data) {\n      console.log('data ', data);\n    }).catch(function (error) {\n      console.log('error ', error);\n    });\n  };\n\n  return _jsx(View, {\n    style: [{\n      backgroundColor: 'black'\n    }],\n    children: _jsxs(SafeAreaView, {\n      style: [{\n        alignItems: 'center',\n        height: '100%',\n        backgroundColor: 'tranparent'\n      }],\n      children: [_jsx(StatusBar, {\n        style: \"light-content\"\n      }), _jsx(View, {\n        style: styles.headerContainer,\n        children: _jsx(Text, {\n          style: styles.headTextContainer,\n          children: \"Smart Water Management\"\n        })\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.textContainer,\n          children: \"Manual Mode\"\n        }), _jsx(View, {\n          style: styles.switchContainer,\n          children: _jsx(Switch, {\n            trackColor: {\n              false: '#767577',\n              true: '#767577'\n            },\n            thumbColor: isEnabled ? '#00FFFF' : '#fff',\n            ios_backgroundColor: \"#3e3e3e\",\n            onValueChange: toggleSwitch,\n            value: isEnabled,\n            onChange: doSomething(isEnabled)\n          })\n        }), _jsx(Text, {\n          style: styles.textContainerChild,\n          children: \"Water System\"\n        })]\n      }), _jsx(MotorStatus, {}), _jsx(WaterLevel, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    alignItems: 'center'\n  },\n  container: {\n    width: '90%',\n    marginTop: 15,\n    alignItems: 'center',\n    borderColor: '#e6e6e6',\n    borderBottomWidth: 0.5,\n    borderTopWidth: 0.5,\n    borderRightWidth: 0.5,\n    borderLeftWidth: 0.5,\n    borderRadius: 10\n  },\n  headerContainer: {\n    width: '100%',\n    backgroundColor: '#000',\n    alignItems: 'center',\n    height: 40\n  },\n  headTextContainer: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 20,\n    textTransform: 'capitalize'\n  },\n  textContainer: {\n    color: '#787878',\n    fontWeight: '400',\n    fontSize: 16,\n    padding: 10,\n    textTransform: 'uppercase'\n  },\n  textContainerChild: {\n    color: '#787878',\n    fontWeight: '200',\n    fontSize: 13,\n    padding: 10,\n    textTransform: 'uppercase'\n  },\n  switchContainer: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["D:/EXPERIMENTS/IOE/Project/watrmanage/App.js"],"names":["React","useState","firebase","MotorStatus","WaterLevel","App","isEnabled","setIsEnabled","toggleSwitch","previousState","doSomething","value","database","ref","update","man","then","data","console","log","catch","error","backgroundColor","alignItems","height","styles","headerContainer","headTextContainer","container","textContainer","switchContainer","false","true","textContainerChild","StyleSheet","create","mainContainer","width","marginTop","borderColor","borderBottomWidth","borderTopWidth","borderRightWidth","borderLeftWidth","borderRadius","color","fontWeight","fontSize","textTransform","padding"],"mappings":"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","sourcesContent":["import {\n  StyleSheet,\n  View,\n  SafeAreaView,\n  Text,\n  Switch,\n  StatusBar,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport firebase from './src/components/config';\nimport MotorStatus from './src/components/motor-status/motor-status.component';\nimport WaterLevel from './src/components/level-bar/level-bar.component';\nimport 'react-native-gesture-handler';\n\nexport default function App() {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n  const doSomething = (value) => {\n    firebase\n      .database()\n      .ref('WatrManage/')\n      .update({\n        man: value ? 1 : 0,\n      })\n      .then((data) => {\n        //success callback\n        console.log('data ', data);\n      })\n      .catch((error) => {\n        //error callback\n        console.log('error ', error);\n      });\n  };\n  return (\n    <View style={[{ backgroundColor: 'black' }]}>\n      <SafeAreaView\n        style={[\n          {\n            alignItems: 'center',\n            height: '100%',\n            backgroundColor: 'tranparent',\n          },\n        ]}\n      >\n        <StatusBar style='light-content' />\n\n        <View style={styles.headerContainer}>\n          <Text style={styles.headTextContainer}>Smart Water Management</Text>\n        </View>\n        <View style={styles.container}>\n          <Text style={styles.textContainer}>Manual Mode</Text>\n          <View style={styles.switchContainer}>\n            <Switch\n              trackColor={{ false: '#767577', true: '#767577' }}\n              thumbColor={isEnabled ? '#00FFFF' : '#fff'}\n              ios_backgroundColor='#3e3e3e'\n              onValueChange={toggleSwitch}\n              value={isEnabled}\n              onChange={doSomething(isEnabled)}\n            />\n          </View>\n          <Text style={styles.textContainerChild}>Water System</Text>\n        </View>\n        {/* motor status component */}\n        <MotorStatus />\n        {/* water wave component */}\n        <WaterLevel />\n      </SafeAreaView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    alignItems: 'center',\n  },\n  container: {\n    width: '90%',\n    marginTop: 15,\n    alignItems: 'center',\n    borderColor: '#e6e6e6',\n    borderBottomWidth: 0.5,\n    borderTopWidth: 0.5,\n    borderRightWidth: 0.5,\n    borderLeftWidth: 0.5,\n    borderRadius: 10,\n  },\n  headerContainer: {\n    width: '100%',\n    backgroundColor: '#000',\n    alignItems: 'center',\n    height: 40,\n  },\n  headTextContainer: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 20,\n    textTransform: 'capitalize',\n  },\n  textContainer: {\n    color: '#787878',\n    fontWeight: '400',\n    fontSize: 16,\n    padding: 10,\n    textTransform: 'uppercase',\n  },\n  textContainerChild: {\n    color: '#787878',\n    fontWeight: '200',\n    fontSize: 13,\n    padding: 10,\n    textTransform: 'uppercase',\n  },\n  switchContainer: {\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}