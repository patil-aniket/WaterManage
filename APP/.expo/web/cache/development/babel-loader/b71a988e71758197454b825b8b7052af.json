{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { EasingNode } from 'react-native-reanimated';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar NUMBERS = Array(10).fill().map(function (_, i) {\n  return i;\n});\n\nvar usePrevious = function usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n\n  if (typeof ref.current === 'undefined') {\n    return 0;\n  }\n\n  return ref.current;\n};\n\nvar AnimatedNumber = function AnimatedNumber(_ref) {\n  var animateToNumber = _ref.animateToNumber,\n      fontStyle = _ref.fontStyle,\n      animationDuration = _ref.animationDuration,\n      includeComma = _ref.includeComma,\n      easing = _ref.easing;\n  var prevNumber = usePrevious(animateToNumber);\n  var animateToNumberString = String(Math.abs(animateToNumber));\n  var prevNumberString = String(Math.abs(prevNumber));\n  var animateToNumbersArr = Array.from(animateToNumberString, Number);\n  var prevNumberersArr = Array.from(prevNumberString, Number);\n\n  if (includeComma) {\n    var reducedArray = new Array(Math.ceil(animateToNumberString.length / 3)).fill(0);\n    var startReducedArray = new Array(Math.ceil(prevNumberString.length / 3)).fill(0);\n    reducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      animateToNumbersArr.splice(animateToNumberString.length - index * 3, 0, ',');\n    });\n    startReducedArray.map(function (__, index) {\n      if (index === 0) {\n        return;\n      }\n\n      prevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\n    });\n  }\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      numberHeight = _React$useState2[0],\n      setNumberHeight = _React$useState2[1];\n\n  var animations = animateToNumbersArr.map(function (__, index) {\n    if (typeof prevNumberersArr[index] !== 'number') {\n      return new Animated.Value(0);\n    }\n\n    var animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\n    return new Animated.Value(animationHeight);\n  });\n\n  var setButtonLayout = function setButtonLayout(e) {\n    setNumberHeight(e.nativeEvent.layout.height);\n  };\n\n  React.useEffect(function () {\n    animations.map(function (animation, index) {\n      if (typeof animateToNumbersArr[index] !== 'number') {\n        return;\n      }\n\n      Animated.timing(animation, {\n        toValue: -1 * (numberHeight * animateToNumbersArr[index]),\n        duration: animationDuration || 1400,\n        useNativeDriver: true,\n        easing: easing || EasingNode.elastic(1.2)\n      }).start();\n    });\n  }, [animateToNumber, numberHeight]);\n\n  var getTranslateY = function getTranslateY(index) {\n    return animations[index];\n  };\n\n  return _jsxs(_Fragment, {\n    children: [numberHeight !== 0 && _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [animateToNumber < 0 && _jsx(Text, {\n        style: [fontStyle, {\n          height: numberHeight\n        }],\n        children: '-'\n      }), animateToNumbersArr.map(function (n, index) {\n        if (typeof n === 'string') {\n          return _jsx(Text, {\n            style: [fontStyle, {\n              height: numberHeight\n            }],\n            children: n\n          }, index);\n        }\n\n        return _jsx(View, {\n          style: {\n            height: numberHeight,\n            overflow: 'hidden'\n          },\n          children: _jsx(Animated.View, {\n            style: [{\n              transform: [{\n                translateY: getTranslateY(index)\n              }]\n            }],\n            children: NUMBERS.map(function (number, i) {\n              return _jsx(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: _jsx(Text, {\n                  style: [fontStyle, {\n                    height: numberHeight\n                  }],\n                  children: number\n                })\n              }, i);\n            })\n          })\n        }, index);\n      })]\n    }), _jsx(Text, {\n      style: [fontStyle, {\n        position: 'absolute',\n        top: -999999\n      }],\n      onLayout: setButtonLayout,\n      children: 0\n    })]\n  });\n};\n\nexport default AnimatedNumber;","map":{"version":3,"sources":["D:/EXPERIMENTS/IOE/Project/watrmanage/node_modules/react-native-animated-numbers/index.js"],"names":["React","Animated","EasingNode","NUMBERS","Array","fill","map","_","i","usePrevious","value","ref","useRef","useEffect","current","AnimatedNumber","animateToNumber","fontStyle","animationDuration","includeComma","easing","prevNumber","animateToNumberString","String","Math","abs","prevNumberString","animateToNumbersArr","from","Number","prevNumberersArr","reducedArray","ceil","length","startReducedArray","__","index","splice","useState","numberHeight","setNumberHeight","animations","Value","animationHeight","setButtonLayout","e","nativeEvent","layout","height","animation","timing","toValue","duration","useNativeDriver","elastic","start","getTranslateY","flexDirection","n","overflow","transform","translateY","number","position","top"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,yBAArC;;;;AAEA,IAAMC,OAAO,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,GAAiBC,GAAjB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUA,CAAV;AAAA,CAArB,CAAhB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC9B,MAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,EAAZ;AACAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACrBF,IAAAA,GAAG,CAACG,OAAJ,GAAcJ,KAAd;AACA,GAFD;;AAIA,MAAI,OAAOC,GAAG,CAACG,OAAX,KAAuB,WAA3B,EAAwC;AACvC,WAAO,CAAP;AACA;;AAED,SAAOH,GAAG,CAACG,OAAX;AACA,CAXD;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAMjB;AAAA,MALLC,eAKK,QALLA,eAKK;AAAA,MAJLC,SAIK,QAJLA,SAIK;AAAA,MAHLC,iBAGK,QAHLA,iBAGK;AAAA,MAFLC,YAEK,QAFLA,YAEK;AAAA,MADLC,MACK,QADLA,MACK;AACL,MAAMC,UAAU,GAAGZ,WAAW,CAACO,eAAD,CAA9B;AACA,MAAMM,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAL,CAAST,eAAT,CAAD,CAApC;AACA,MAAMU,gBAAgB,GAAGH,MAAM,CAACC,IAAI,CAACC,GAAL,CAASJ,UAAT,CAAD,CAA/B;AAEA,MAAMM,mBAAmB,GAAGvB,KAAK,CAACwB,IAAN,CAAWN,qBAAX,EAAkCO,MAAlC,CAA5B;AACA,MAAMC,gBAAgB,GAAG1B,KAAK,CAACwB,IAAN,CAAWF,gBAAX,EAA6BG,MAA7B,CAAzB;;AAEA,MAAIV,YAAJ,EAAkB;AACjB,QAAMY,YAAY,GAAG,IAAI3B,KAAJ,CACpBoB,IAAI,CAACQ,IAAL,CAAUV,qBAAqB,CAACW,MAAtB,GAA+B,CAAzC,CADoB,EAEnB5B,IAFmB,CAEd,CAFc,CAArB;AAIA,QAAM6B,iBAAiB,GAAG,IAAI9B,KAAJ,CACzBoB,IAAI,CAACQ,IAAL,CAAUN,gBAAgB,CAACO,MAAjB,GAA0B,CAApC,CADyB,EAExB5B,IAFwB,CAEnB,CAFmB,CAA1B;AAIA0B,IAAAA,YAAY,CAACzB,GAAb,CAAiB,UAAC6B,EAAD,EAAKC,KAAL,EAAe;AAC/B,UAAIA,KAAK,KAAK,CAAd,EAAiB;AAChB;AACA;;AAEDT,MAAAA,mBAAmB,CAACU,MAApB,CACCf,qBAAqB,CAACW,MAAtB,GAA+BG,KAAK,GAAG,CADxC,EAEC,CAFD,EAGC,GAHD;AAKA,KAVD;AAYAF,IAAAA,iBAAiB,CAAC5B,GAAlB,CAAsB,UAAC6B,EAAD,EAAKC,KAAL,EAAe;AACpC,UAAIA,KAAK,KAAK,CAAd,EAAiB;AAChB;AACA;;AAEDN,MAAAA,gBAAgB,CAACO,MAAjB,CAAwBX,gBAAgB,CAACO,MAAjB,GAA0BG,KAAK,GAAG,CAA1D,EAA6D,CAA7D,EAAgE,GAAhE;AACA,KAND;AAOA;;AAED,wBAAwCpC,KAAK,CAACsC,QAAN,CAAe,CAAf,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,UAAU,GAAGd,mBAAmB,CAACrB,GAApB,CAAwB,UAAC6B,EAAD,EAAKC,KAAL,EAAe;AACzD,QAAI,OAAON,gBAAgB,CAACM,KAAD,CAAvB,KAAmC,QAAvC,EAAiD;AAChD,aAAO,IAAInC,QAAQ,CAACyC,KAAb,CAAmB,CAAnB,CAAP;AACA;;AAED,QAAMC,eAAe,GAAG,CAAC,CAAD,IAAMJ,YAAY,GAAGT,gBAAgB,CAACM,KAAD,CAArC,CAAxB;AACA,WAAO,IAAInC,QAAQ,CAACyC,KAAb,CAAmBC,eAAnB,CAAP;AACA,GAPkB,CAAnB;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC9BL,IAAAA,eAAe,CAACK,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqBC,MAAtB,CAAf;AACA,GAFD;;AAIAhD,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACrB4B,IAAAA,UAAU,CAACnC,GAAX,CAAe,UAAC2C,SAAD,EAAYb,KAAZ,EAAsB;AACpC,UAAI,OAAOT,mBAAmB,CAACS,KAAD,CAA1B,KAAsC,QAA1C,EAAoD;AACnD;AACA;;AAEDnC,MAAAA,QAAQ,CAACiD,MAAT,CAAgBD,SAAhB,EAA2B;AAC1BE,QAAAA,OAAO,EAAE,CAAC,CAAD,IAAMZ,YAAY,GAAGZ,mBAAmB,CAACS,KAAD,CAAxC,CADiB;AAE1BgB,QAAAA,QAAQ,EAAElC,iBAAiB,IAAI,IAFL;AAG1BmC,QAAAA,eAAe,EAAE,IAHS;AAI1BjC,QAAAA,MAAM,EAAEA,MAAM,IAAIlB,UAAU,CAACoD,OAAX,CAAmB,GAAnB;AAJQ,OAA3B,EAKGC,KALH;AAMA,KAXD;AAYA,GAbD,EAaG,CAACvC,eAAD,EAAkBuB,YAAlB,CAbH;;AAeA,MAAMiB,aAAa,GAAG,SAAhBA,aAAgB,CAACpB,KAAD,EAAW;AAChC,WAAOK,UAAU,CAACL,KAAD,CAAjB;AACA,GAFD;;AAIA,SACC;AAAA,eACEG,YAAY,KAAK,CAAjB,IACA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA,iBACEzC,eAAe,GAAG,CAAlB,IACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,SAAD,EAAY;AAAE+B,UAAAA,MAAM,EAAET;AAAV,SAAZ,CAAb;AAAA,kBAAqD;AAArD,QAFF,EAIEZ,mBAAmB,CAACrB,GAApB,CAAwB,UAACoD,CAAD,EAAItB,KAAJ,EAAc;AACtC,YAAI,OAAOsB,CAAP,KAAa,QAAjB,EAA2B;AAC1B,iBACC,KAAC,IAAD;AAAkB,YAAA,KAAK,EAAE,CAACzC,SAAD,EAAY;AAAE+B,cAAAA,MAAM,EAAET;AAAV,aAAZ,CAAzB;AAAA,sBACEmB;AADF,aAAWtB,KAAX,CADD;AAKA;;AAED,eACC,KAAC,IAAD;AAEC,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAET,YAAV;AAAwBoB,YAAAA,QAAQ,EAAE;AAAlC,WAFR;AAAA,oBAIC,KAAC,QAAD,CAAU,IAAV;AACC,YAAA,KAAK,EAAE,CACN;AACCC,cAAAA,SAAS,EAAE,CACV;AACCC,gBAAAA,UAAU,EAAEL,aAAa,CAACpB,KAAD;AAD1B,eADU;AADZ,aADM,CADR;AAAA,sBAWEjC,OAAO,CAACG,GAAR,CAAY,UAACwD,MAAD,EAAStD,CAAT;AAAA,qBACZ,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAEiD,kBAAAA,aAAa,EAAE;AAAjB,iBAAb;AAAA,0BACC,KAAC,IAAD;AAAM,kBAAA,KAAK,EAAE,CAACxC,SAAD,EAAY;AAAE+B,oBAAAA,MAAM,EAAET;AAAV,mBAAZ,CAAb;AAAA,4BACEuB;AADF;AADD,iBAA4CtD,CAA5C,CADY;AAAA,aAAZ;AAXF;AAJD,WACM4B,KADN,CADD;AA0BA,OAnCA,CAJF;AAAA,MAFF,EA4CC,KAAC,IAAD;AACC,MAAA,KAAK,EAAE,CAACnB,SAAD,EAAY;AAAE8C,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,GAAG,EAAE,CAAC;AAA9B,OAAZ,CADR;AAEC,MAAA,QAAQ,EAAEpB,eAFX;AAAA,gBAIE;AAJF,MA5CD;AAAA,IADD;AAqDA,CAlID;;AAoIA,eAAe7B,cAAf","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport Animated, { EasingNode } from 'react-native-reanimated';\n\nconst NUMBERS = Array(10).fill().map((_, i) => i);\n\nconst usePrevious = (value) => {\n\tconst ref = React.useRef();\n\tReact.useEffect(() => {\n\t\tref.current = value;\n\t});\n\n\tif (typeof ref.current === 'undefined') {\n\t\treturn 0;\n\t}\n\n\treturn ref.current;\n};\n\nconst AnimatedNumber = ({\n\tanimateToNumber,\n\tfontStyle,\n\tanimationDuration,\n\tincludeComma,\n\teasing,\n}) => {\n\tconst prevNumber = usePrevious(animateToNumber);\n\tconst animateToNumberString = String(Math.abs(animateToNumber));\n\tconst prevNumberString = String(Math.abs(prevNumber));\n\n\tconst animateToNumbersArr = Array.from(animateToNumberString, Number);\n\tconst prevNumberersArr = Array.from(prevNumberString, Number);\n\n\tif (includeComma) {\n\t\tconst reducedArray = new Array(\n\t\t\tMath.ceil(animateToNumberString.length / 3)\n\t\t).fill(0);\n\n\t\tconst startReducedArray = new Array(\n\t\t\tMath.ceil(prevNumberString.length / 3)\n\t\t).fill(0);\n\n\t\treducedArray.map((__, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tanimateToNumbersArr.splice(\n\t\t\t\tanimateToNumberString.length - index * 3,\n\t\t\t\t0,\n\t\t\t\t','\n\t\t\t);\n\t\t});\n\n\t\tstartReducedArray.map((__, index) => {\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tprevNumberersArr.splice(prevNumberString.length - index * 3, 0, ',');\n\t\t});\n\t}\n\n\tconst [numberHeight, setNumberHeight] = React.useState(0);\n\tconst animations = animateToNumbersArr.map((__, index) => {\n\t\tif (typeof prevNumberersArr[index] !== 'number') {\n\t\t\treturn new Animated.Value(0);\n\t\t}\n\n\t\tconst animationHeight = -1 * (numberHeight * prevNumberersArr[index]);\n\t\treturn new Animated.Value(animationHeight);\n\t});\n\n\tconst setButtonLayout = (e) => {\n\t\tsetNumberHeight(e.nativeEvent.layout.height);\n\t};\n\n\tReact.useEffect(() => {\n\t\tanimations.map((animation, index) => {\n\t\t\tif (typeof animateToNumbersArr[index] !== 'number') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAnimated.timing(animation, {\n\t\t\t\ttoValue: -1 * (numberHeight * animateToNumbersArr[index]),\n\t\t\t\tduration: animationDuration || 1400,\n\t\t\t\tuseNativeDriver: true,\n\t\t\t\teasing: easing || EasingNode.elastic(1.2),\n\t\t\t}).start();\n\t\t});\n\t}, [animateToNumber, numberHeight]);\n\n\tconst getTranslateY = (index) => {\n\t\treturn animations[index];\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{numberHeight !== 0 && (\n\t\t\t\t<View style={{ flexDirection: 'row' }}>\n\t\t\t\t\t{animateToNumber < 0 && (\n\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>{'-'}</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{animateToNumbersArr.map((n, index) => {\n\t\t\t\t\t\tif (typeof n === 'string') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Text key={index} style={[fontStyle, { height: numberHeight }]}>\n\t\t\t\t\t\t\t\t\t{n}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tstyle={{ height: numberHeight, overflow: 'hidden' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttransform: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslateY: getTranslateY(index),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{NUMBERS.map((number, i) => (\n\t\t\t\t\t\t\t\t\t\t<View style={{ flexDirection: 'row' }} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<Text style={[fontStyle, { height: numberHeight }]}>\n\t\t\t\t\t\t\t\t\t\t\t\t{number}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</View>\n\t\t\t)}\n\t\t\t<Text\n\t\t\t\tstyle={[fontStyle, { position: 'absolute', top: -999999 }]}\n\t\t\t\tonLayout={setButtonLayout}\n\t\t\t>\n\t\t\t\t{0}\n\t\t\t</Text>\n\t\t</>\n\t);\n};\n\nexport default AnimatedNumber;\n"]},"metadata":{},"sourceType":"module"}